/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import config.koneksi;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MyBook Hype AMD
 */
public class menuMenu extends javax.swing.JPanel {

    private final Connection conn;
    private String idKategori;

    public menuMenu() {
        initComponents();

        conn = koneksi.getConnection();
        setTableModel();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_main = new javax.swing.JPanel();
        pn_view = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_delete = new Palette.Custom_ButtonRounded();
        btnTambah = new Palette.Custom_ButtonRounded();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new Palette.JTable_Custom();
        txtPencarian = new Palette.JTextfieldRounded();
        btn_batal = new Palette.Custom_ButtonRounded();
        pn_add = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Judul = new javax.swing.JLabel();
        btn_batal2 = new Palette.Custom_ButtonRounded();
        btnSave = new Palette.Custom_ButtonRounded();
        jSeparator3 = new javax.swing.JSeparator();
        txtID = new Palette.JTextfieldRounded();
        jLabel1 = new javax.swing.JLabel();
        txtMenu = new Palette.JTextfieldRounded();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtHarga = new Palette.JTextfieldRounded();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbxKategori = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.CardLayout());

        pn_main.setBackground(new java.awt.Color(35, 12, 20));
        pn_main.setLayout(new java.awt.CardLayout());

        pn_view.setBackground(new java.awt.Color(35, 12, 20));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Meat.png"))); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Stok Bahan");

        btn_delete.setBackground(new java.awt.Color(105, 33, 58));
        btn_delete.setText("Delete");
        btn_delete.setFillOriginal(new java.awt.Color(105, 33, 58));
        btn_delete.setFillOver(new java.awt.Color(105, 33, 58));
        btn_delete.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_delete.setPreferredSize(new java.awt.Dimension(120, 19));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btnTambah.setBackground(new java.awt.Color(102, 153, 255));
        btnTambah.setText("Tambah");
        btnTambah.setFillOriginal(new java.awt.Color(105, 33, 58));
        btnTambah.setFillOver(new java.awt.Color(105, 33, 58));
        btnTambah.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnTambah.setPreferredSize(new java.awt.Dimension(120, 19));
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        txtPencarian.setForeground(new java.awt.Color(255, 255, 255));
        txtPencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPencarianActionPerformed(evt);
            }
        });

        btn_batal.setBackground(new java.awt.Color(105, 33, 58));
        btn_batal.setText("Batal");
        btn_batal.setFillOriginal(new java.awt.Color(105, 33, 58));
        btn_batal.setFillOver(new java.awt.Color(105, 33, 58));
        btn_batal.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_batal.setPreferredSize(new java.awt.Dimension(120, 19));
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_viewLayout = new javax.swing.GroupLayout(pn_view);
        pn_view.setLayout(pn_viewLayout);
        pn_viewLayout.setHorizontalGroup(
            pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_viewLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(70, 70, 70))
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 667, Short.MAX_VALUE)
                        .addComponent(txtPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
            .addGroup(pn_viewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2)
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_viewLayout.setVerticalGroup(
            pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_viewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(txtPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(220, Short.MAX_VALUE))
        );

        pn_main.add(pn_view, "card2");

        pn_add.setBackground(new java.awt.Color(35, 12, 20));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Meat.png"))); // NOI18N
        jLabel6.setText("jLabel5");

        Judul.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        Judul.setForeground(new java.awt.Color(255, 255, 255));
        Judul.setText("Tambah Data Stok");

        btn_batal2.setText("Batal");
        btn_batal2.setFillOriginal(new java.awt.Color(105, 33, 58));
        btn_batal2.setFillOver(new java.awt.Color(105, 33, 58));
        btn_batal2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_batal2.setPreferredSize(new java.awt.Dimension(120, 19));
        btn_batal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal2ActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(102, 153, 255));
        btnSave.setText("Simpan");
        btnSave.setFillOriginal(new java.awt.Color(105, 33, 58));
        btnSave.setFillOver(new java.awt.Color(105, 33, 58));
        btnSave.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSave.setPreferredSize(new java.awt.Dimension(120, 19));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtID.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID");

        txtMenu.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nama Menu");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));

        txtHarga.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Harga");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Kategori");

        cbxKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxKategori.setPreferredSize(new java.awt.Dimension(72, 36));

        javax.swing.GroupLayout pn_addLayout = new javax.swing.GroupLayout(pn_add);
        pn_add.setLayout(pn_addLayout);
        pn_addLayout.setHorizontalGroup(
            pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_addLayout.createSequentialGroup()
                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_addLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)
                            .addComponent(txtMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)
                            .addGroup(pn_addLayout.createSequentialGroup()
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_addLayout.createSequentialGroup()
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_batal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_addLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pn_addLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Judul)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pn_addLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 996, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(369, 369, 369))
        );
        pn_addLayout.setVerticalGroup(
            pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_addLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Judul)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134)
                .addComponent(jLabel7)
                .addContainerGap(317, Short.MAX_VALUE))
        );

        pn_main.add(pn_add, "card2");

        add(pn_main, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        pn_main.removeAll();
        pn_main.add(pn_add);
        pn_main.repaint();
        pn_main.revalidate();

        txtID.setText(setIdMenu());
        if(btnTambah.getText().equals("Perbarui")){
            dataTabel();
            btnSave.setText("Perbarui");
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btn_batal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal2ActionPerformed
        showPanel();
    }//GEN-LAST:event_btn_batal2ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (btnSave.getText().equals("Tambah")) {
            btnSave.setText("Simpan");
        } else if (btnSave.getText().equals("Simpan")) {
            insertData();
        } else if (btnSave.getText().equals("Perbarui")) {
            updateData();
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
       if(btnTambah.getText().equals("Tambah")){
           btnTambah.setText("Perbarui");
           btn_delete.setVisible(true);
           btn_batal.setVisible(true);
       }
    }//GEN-LAST:event_tblDataMouseClicked

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        showPanel();
        loadData();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
       deleteData();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void txtPencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPencarianActionPerformed
        searchData();
    }//GEN-LAST:event_txtPencarianActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Judul;
    private Palette.Custom_ButtonRounded btnSave;
    private Palette.Custom_ButtonRounded btnTambah;
    private Palette.Custom_ButtonRounded btn_batal;
    private Palette.Custom_ButtonRounded btn_batal2;
    private Palette.Custom_ButtonRounded btn_delete;
    private javax.swing.JComboBox<String> cbxKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel pn_add;
    private javax.swing.JPanel pn_main;
    private javax.swing.JPanel pn_view;
    private Palette.JTable_Custom tblData;
    private Palette.JTextfieldRounded txtHarga;
    private Palette.JTextfieldRounded txtID;
    private Palette.JTextfieldRounded txtMenu;
    private Palette.JTextfieldRounded txtPencarian;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        getKategori();
        getData((DefaultTableModel) tblData.getModel());
        btn_batal.setVisible(false);
        btn_delete.setVisible(false);
    }
    
    private void showPanel(){
        pn_main.removeAll();
        pn_main.add(new menuMenu());
        pn_main.repaint();
        pn_main.revalidate();
    }
    
     private void resetForm() {
         txtID.setText("");
         txtMenu.setText("");
         
    }


    private void setTableModel() {
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.addColumn("ID");
        model.addColumn("Nama Menu");
        model.addColumn("Harga");
        model.addColumn("Id Kategori");
        model.addColumn("Nama Kategori");
        
       // model.addColumn("Nama Bahan");
    }

    private void getData(DefaultTableModel model) {
        model.setRowCount(0);

        try {
            String sql = "SELECT mn.Id_Menu, mn.Nama_Menu, mn.Harga, ktg.Id_Kategori, ktg.Nama_Kategori FROM menu mn INNER JOIN kategori ktg ON ktg.Id_Kategori =  mn.Id_Kategori";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                ResultSet rs = st.executeQuery();

                while (rs.next()) {
                    String idMenu = rs.getString("Id_Menu");
                    String namaMenu = rs.getString("Nama_Menu");
                    String harga = rs.getString("Harga");
                    String kategori = rs.getString("Id_Kategori");
                    String namaKategori = rs.getString("Nama_Kategori");
                    

                    Object[] rowData = {idMenu, namaMenu, harga, kategori, namaKategori };
                    model.addRow(rowData);
                }
            }
        } catch (Exception e) {
            Logger.getLogger(menuMenu.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private String setIdMenu() {
        String Urutan = null;
        String prefix = "MN_";

        String sql = "SELECT RIGHT(Id_Menu, 3) AS Nomor "
            + "FROM menu "  // Pastikan ada spasi setelah nama tabel
            + "WHERE Id_Menu LIKE 'MN_%' "
            + "ORDER BY Id_Menu DESC "
            + "LIMIT 1";

        try (PreparedStatement st = conn.prepareStatement(sql)) {
            ResultSet rs = st.executeQuery();

            // Jika ada ID meja sebelumnya
        if (rs.next()) {
            int nomor = Integer.parseInt(rs.getString("Nomor")) + 1;
            Urutan = prefix + String.format("%03d", nomor);  // Menambahkan prefix dan nomor ID
        } else {
            // Jika belum ada ID meja, mulai dari 001
            Urutan = prefix + "001";
        }
        } catch (Exception e) {
            java.util.logging.Logger.getLogger(menuMenu.class.getName()).log(Level.SEVERE, null, e);
        }
        return Urutan;

    }
    
    private void getKategori() {
        try {
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            model.addElement("Pilih Kategori");
            String sql = "SELECT Id_Kategori, Nama_Kategori FROM kategori";
            PreparedStatement st = conn.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet  rs = st.executeQuery();
            
            while(rs.next()){
                String namaKategori = rs.getString("Nama_Kategori");
                model.addElement(namaKategori);
            }
            cbxKategori.setModel(model);
            
            cbxKategori.addActionListener(e -> {
                int selectIndex = cbxKategori.getSelectedIndex();
                
                if(selectIndex > 0){
                    try {
                        rs.absolute(selectIndex);
                        idKategori = rs.getString("Id_Kategori");
                    } catch (SQLException ex) {
                        ex.printStackTrace(); 
                    }
                }
            
            });
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void insertData() {
        String idMenu = txtID.getText();
        String  namaMenu = txtMenu.getText();
        String  harga = txtHarga.getText();
        


        if (idMenu.isEmpty() || namaMenu.isEmpty() || namaMenu.isEmpty() || cbxKategori.getSelectedItem().toString().equals("Pilih Kategori")) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return; // penting agar proses tidak lanjut
        }
        try {
             String sql = "INSERT INTO menu (Id_Menu, Nama_Menu, Harga, Id_Kategori) VALUES (?, ?, ?, ?)";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                st.setString(1, idMenu);
                st.setString(2, namaMenu);
                st.setString(3, harga);
                st.setString(4, idKategori);
                
                int rowInserted = st.executeUpdate();
                if(rowInserted > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil DiTambahkan");
                    resetForm();
                    loadData();
                    showPanel();
                }
            }
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(menuMenu.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void dataTabel() {
        pn_view.setVisible(false);
        pn_add.setVisible(true);
        
        int row = tblData.getSelectedRow();
        Judul.setText("Perbaru Data User");
        
        txtID.setEnabled(false);
        
        txtID.setText(tblData.getValueAt(row, 0).toString());
        txtMenu.setText(tblData.getValueAt(row, 1).toString());
        txtHarga.setText(tblData.getValueAt(row, 2).toString());
        cbxKategori.setSelectedItem(tblData.getValueAt(row, 4));
    }
    
    private void updateData(){
        String idMenu = txtID.getText();
        String namaMenu = txtMenu.getText();
        String harga = txtHarga.getText();
        
        
        if (idMenu.isEmpty() || namaMenu.isEmpty() || harga.isEmpty() || cbxKategori.getSelectedItem().toString().equals("Pilih Kategori")) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return; // penting agar proses tidak lanjut
        }
        try {
            String sql = "UPDATE menu SET Nama_Menu=?, Harga=?, Id_Kategori=? WHERE Id_Menu=?";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                st.setString(1, namaMenu);
                st.setString(2, harga);
                st.setString(3, idKategori);
                st.setString(4, idMenu);
                
                int rowUpdate = st.executeUpdate();
                if(rowUpdate > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil DiPerbarui");
                    resetForm();
                    loadData();
                    showPanel();
                }
            }
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(menuMenu.class.getName()).log(Level.SEVERE, null, e);
        }
        }
    
    
    private void deleteData(){
        int selectedRow = tblData.getSelectedRow();
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Kamu Yakin Ingin Menghapus Data Ini?", "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION);
        
        if(confirm ==  JOptionPane.YES_OPTION){
            String Id = tblData.getValueAt(selectedRow, 0).toString();
            try {
                String sql = "DELETE FROM menu Where Id_Menu=?";
                try(PreparedStatement st = conn.prepareStatement(sql)) {
                    st.setString(1, Id);
                    
                    int rowDeleted = st.executeUpdate();
                    if(rowDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    }else {
                        JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
                    }
                }
            } catch (SQLException e) {
                java.util.logging.Logger.getLogger(menuMenu.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        resetForm();
        loadData();
        showPanel();
    }

    private void searchData(){
        String kataKunci = txtPencarian.getText();
        
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0);
        
        try {
             String sql = "SELECT * FROM meja WHERE Nomor LIKE ?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, "%" + kataKunci + "%");
            ResultSet rs = st.executeQuery();
                
                while (rs.next()) {                    
                    String idMeja = rs.getString("Id_Meja");
                    String nomorMeja = rs.getString("Nomor");
                    
                    Object[] rowData = {idMeja, nomorMeja};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(menuMenu.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    
}
